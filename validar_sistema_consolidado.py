"""
üß™ Valida√ß√£o do Sistema de Cache Consolidado
===========================================

Verifica se a consolida√ß√£o foi bem-sucedida e o sistema est√° funcional.

Author: Sistema de Otimiza√ß√£o Dashboard LULC
Date: 2025-07-22
"""

import sys
from pathlib import Path

def test_cache_system():
    """Testa o sistema de cache consolidado."""
    print("üîç TESTANDO SISTEMA DE CACHE CONSOLIDADO")
    print("=" * 50)
    
    try:
        # Testa import principal
        from utilities.cache_system import load_optimized_data, create_performance_metrics
        print("‚úÖ Import do cache system: OK")
        
        # Testa carregamento de dados
        metadata, df, cache_info = load_optimized_data()
        print(f"‚úÖ Carregamento de dados: OK")
        print(f"   üìä DataFrame: {len(df) if df is not None else 0} rows")
        print(f"   ‚ÑπÔ∏è Cache info: {cache_info.get('status', 'unknown')}")
        
        # Testa m√©tricas
        metrics = create_performance_metrics()
        print(f"‚úÖ M√©tricas de performance: OK")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        return False

def test_dashboard_modules():
    """Testa os m√≥dulos dashboard com imports simplificados."""
    print("\nüñ•Ô∏è TESTANDO M√ìDULOS DASHBOARD")
    print("=" * 40)
    
    modules = [
        "dashboard.comparison",
        "dashboard.temporal", 
        "dashboard.detailed",
        "dashboard.conab"
    ]
    
    success_count = 0
    
    for module in modules:
        try:
            __import__(module)
            print(f"‚úÖ {module}: Import OK")
            success_count += 1
        except Exception as e:
            print(f"‚ùå {module}: Erro - {e}")
    
    print(f"\nüìä Resultado: {success_count}/{len(modules)} m√≥dulos OK")
    return success_count == len(modules)

def main():
    """Executa valida√ß√£o completa."""
    print("üß™ INICIANDO VALIDA√á√ÉO COMPLETA DO SISTEMA")
    print("=" * 60)
    
    # Testa cache
    cache_ok = test_cache_system()
    
    # Testa m√≥dulos
    modules_ok = test_dashboard_modules()
    
    # Resultado final
    print("\nüéØ RESULTADO DA VALIDA√á√ÉO")
    print("=" * 30)
    print(f"üíæ Sistema de cache: {'‚úÖ OK' if cache_ok else '‚ùå FALHOU'}")
    print(f"üñ•Ô∏è M√≥dulos dashboard: {'‚úÖ OK' if modules_ok else '‚ùå FALHOU'}")
    
    if cache_ok and modules_ok:
        print("\nüéâ SISTEMA TOTALMENTE FUNCIONAL!")
        print("Consolida√ß√£o bem-sucedida. Cache unificado e funcional.")
    else:
        print("\n‚ö†Ô∏è SISTEMA COM PROBLEMAS")
        print("Verifique os erros acima e corrija os problemas.")
    
    return cache_ok and modules_ok

if __name__ == "__main__":
    main()
